{"version":3,"sources":["webpack:///./src/hooks/useTimes.js","webpack:///./src/pages/appointment.js","webpack:///./src/hooks/useServices.js"],"names":["times","index","hour","minute","newMinute","toString","AppointmentScheduler","useState","dateActive","timeActive","setTimeActive","serviceActive","setServiceActive","submitActive","setSubmitActive","dateValue","setDateValue","timeValue","setTimeValue","serviceValue","setServiceValue","services","allFile","nodes","childMarkdownRemark","frontmatter","split","useTimes","today","Date","minDate","getFullYear","getMonth","getDate","useEffect","console","log","className","type","name","value","onChange","e","newDate","target","length","newTime","disabled","map","currTime","key","newServiceValue","currService","AppointmentPage"],"mappings":"sNAeeA,EAfD,WAIV,IAHA,IAAMA,EAAQ,GAEVC,EAAQ,EACJC,EAAK,EAAGA,GAAM,GAAIA,IACtB,IAAI,IAAIC,EAAO,EAAGA,EAAO,GAAIA,GAAQ,GAAI,CACrC,IAAIC,EAAYD,EACbC,EAAY,KAAIA,EAAY,EAAID,EAAOE,YAC1CL,EAAMC,GAAYC,EAAlB,IAA0BE,EAC1BH,IAGR,OAAOD,GCNLM,EAAuB,WAAO,IAAD,EACKC,oBAAS,GAAtCC,EADwB,aAEKD,oBAAS,IAAtCE,EAFwB,KAEZC,EAFY,OAGWH,oBAAS,GAA5CI,EAHwB,KAGTC,EAHS,OAISL,oBAAS,GAA1CM,EAJwB,KAIVC,EAJU,OAMGP,mBAAS,IAApCQ,EANwB,KAMbC,EANa,OAOGT,mBAAS,IAApCU,EAPwB,KAObC,EAPa,OAQSX,mBAAS,WAA1CY,EARwB,KAQVC,EARU,KA6BzBC,EChCQ,OAeEC,QAAQC,MAAM,GAAGC,oBAAoBC,YAAYJ,SDiBlCK,MAAM,KAC/B1B,EAAQ2B,IACRC,EAAQ,IAAIC,KAAK,cACjBC,EAAaF,EAAMG,cAAc1B,WAA1B,IAAwCuB,EAAMI,WAAW3B,WAAzD,IAAuEuB,EAAMK,UAAU5B,WAKpG,OAJA6B,qBAAU,WACNC,QAAQC,IAAIN,KACd,IAGE,0BAAMO,UAAU,oBACR,2BAAOA,UAAS,iBAAkB7B,EAAa,SAAW,KACtD,yBAAK6B,UAAU,eAAf,kBACA,2BAAOC,KAAK,OAAOC,KAAK,OAAOF,UAAU,QAAQG,MAAOzB,EAAW0B,SA/B1D,SAACC,GACtB,IAAMC,EAAUD,EAAEE,OAAOJ,MACzBxB,EAAa2B,GACbR,QAAQC,IAAIP,KAAKc,IACjBjC,EAAciC,EAAQE,OAAS,OA6BvB,2BAAOR,UAAS,iBAAkB5B,EAAa,SAAW,KACtD,yBAAK4B,UAAU,eAAf,mBACA,4BAAQG,MAAOvB,EAAWsB,KAAK,OAAOF,UAAU,QAAQI,SA5B/C,SAACC,GACtB,IAAMI,EAAUJ,EAAEE,OAAOJ,MACzBtB,EAAa4B,GACblC,EAA6B,YAAZkC,IAyB+EC,UAAWtC,GAC3F,4BAAQ+B,MAAM,YACbxC,EAAMgD,KAAI,SAACC,EAAUhD,GAAX,OAAqB,4BAAQiD,IAAKjD,EAAOuC,MAAOS,GAAWA,QAG9E,2BAAOZ,UAAS,qBAAsB1B,EAAgB,SAAW,KACjE,yBAAK0B,UAAU,eAAf,WACI,4BAAQE,KAAK,WAAWF,UAAU,QAAQG,MAAOrB,EAAcsB,SA7BnD,SAACC,GACzB,IAAMS,EAAkBT,EAAEE,OAAOJ,MACjCpB,EAAgB+B,GAChBrC,EAAgBqC,EAAgBN,OAAS,IA0BiEE,UAAWpC,GACpGU,EAAS2B,KAAI,SAACI,EAAanD,GAAd,OAAwB,4BAAQiD,IAAKjD,EAAOuC,MAAOY,GAAeA,QAGxF,2BAAOd,KAAK,SAASE,MAAM,SAASH,UAAS,WAAYxB,EAAe,SAAW,IAAMkC,UAAWlC,MAyBrGwC,UApBS,WAOpB,OANAnB,qBAAU,cAIP,IAGC,kBAAC,IAAD,CAAQG,UAAU,oBACd,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,SAAf,yBACA,yBAAKA,UAAU,WAAf,uBACA,yBAAKA,UAAU,WAAf,yBAEJ,yBAAKA,UAAU,sBAAf,4BACA,kBAAC,EAAD,S","file":"component---src-pages-appointment-js-d91b2abde048c644d58f.js","sourcesContent":["const times = () => {\r\n    const times = []\r\n\r\n    let index = 0\r\n    for(let hour=8; hour<=16; hour++) {\r\n        for(let minute=0; minute<60; minute+=15) {\r\n            let newMinute = minute\r\n            if(newMinute < 10){newMinute = 0 + minute.toString()}\r\n            times[index] = `${hour}:${newMinute}`\r\n            index++\r\n        }\r\n    }\r\n    return times\r\n}\r\n\r\nexport default times","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport '../style/appointment.sass'\r\nimport { useServices } from \"../hooks/useServices\"\r\nimport useTimes from \"../hooks/useTimes\"\r\n\r\nconst AppointmentScheduler = () => {\r\n    const [dateActive, setDateActive] = useState(true)\r\n    const [timeActive, setTimeActive] = useState(false)\r\n    const [serviceActive, setServiceActive] = useState(false)\r\n    const [submitActive, setSubmitActive] = useState(false)\r\n\r\n    const [dateValue, setDateValue] = useState('')\r\n    const [timeValue, setTimeValue] = useState('')\r\n    const [serviceValue, setServiceValue] = useState('service')\r\n\r\n    const handleDateChange = (e) => {\r\n        const newDate = e.target.value\r\n        setDateValue(newDate)\r\n        console.log(Date(newDate))\r\n        setTimeActive(newDate.length > 0)\r\n    }\r\n\r\n    const handleTimeChange = (e) => {\r\n        const newTime = e.target.value\r\n        setTimeValue(newTime)\r\n        setServiceActive(newTime !== 'default')\r\n    }\r\n\r\n    const handleServiceChange = (e) => {\r\n        const newServiceValue = e.target.value\r\n        setServiceValue(newServiceValue)\r\n        setSubmitActive(newServiceValue.length > 0)\r\n    }\r\n\r\n    const services = useServices().split(',')\r\n    const times = useTimes()\r\n    const today = new Date('2020-05-11')\r\n    const minDate = `${today.getFullYear().toString()}-${today.getMonth().toString()}-${today.getDate().toString()}`\r\n    useEffect(() => {\r\n        console.log(minDate)\r\n    },[])\r\n\r\n    return (\r\n        <form className='reservation-form'>\r\n                <label className={`section date ${dateActive ? 'active' : ''}`}>\r\n                    <div className='description'>Available Days</div>\r\n                    <input type='date' name='date' className='input' value={dateValue} onChange={handleDateChange} />\r\n                </label>\r\n                <label className={`section time ${timeActive ? 'active' : ''}`}>\r\n                    <div className='description'>Available times</div>\r\n                    <select value={timeValue} name='time' className='input' onChange={handleTimeChange} disabled={!timeActive}>\r\n                        <option value='default'></option>\r\n                        {times.map((currTime, index) => <option key={index} value={currTime}>{currTime}</option>)}\r\n                    </select>\r\n                </label>\r\n                <label className={`section services ${serviceActive ? 'active' : ''}`}>\r\n                <div className='description'>Service</div>\r\n                    <select name='services' className='input' value={serviceValue} onChange={handleServiceChange} disabled={!serviceActive}>\r\n                        {services.map((currService, index) => <option key={index} value={currService} >{currService}</option>)}\r\n                    </select>\r\n                </label>\r\n                <input type='submit' value='Submit' className={`submit ${submitActive ? 'active' : ''}`} disabled={!submitActive} />\r\n            </form>\r\n    )\r\n}\r\n\r\nconst AppointmentPage = () => {\r\n    useEffect(() => {\r\n        // fetch('http://XXX.XXX.X.X/calendar/')\r\n        //     .then(res => res.json())\r\n        //     .then(data => console.log(data))\r\n    }, [])\r\n\r\n    return ( \r\n        <Layout className='appointment-page'>\r\n            <div className='business-hours'>\r\n                <div className='title'>Normal Business Hours</div>\r\n                <div className='content'>Mon - Fri 8am - 8pm</div>\r\n                <div className='content'>Sat - Sun 10am - 6pm</div>\r\n            </div>\r\n            <div className='appointments-title'>Reserve Your Time Today!</div>\r\n            <AppointmentScheduler />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AppointmentPage\r\n","import {useStaticQuery, graphql} from 'gatsby'\r\n\r\nexport const useServices = () => {\r\n    const Services = useStaticQuery(\r\n        graphql`\r\n        query ServicesQuery {\r\n            allFile(filter: {sourceInstanceName: {eq: \"media\"}, ext: {eq: \".md\"}, name: {eq: \"services\"}}) {\r\n              nodes {\r\n                childMarkdownRemark {\r\n                  frontmatter {\r\n                    services\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `\r\n    )\r\n    return Services.allFile.nodes[0].childMarkdownRemark.frontmatter.services\r\n}\r\n"],"sourceRoot":""}